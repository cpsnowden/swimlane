on:
  push:
    branches: ["master"]

env:
  PROJECT_ID: wagon-bootcamp-374809
  GAR_LOCATION: europe-west2
  #  https://console.cloud.google.com/artifacts/docker/wagon-bootcamp-374809/europe-west2/personal-projects?project=wagon-bootcamp-374809
  REPOSITORY: personal-projects
  SERVICE: swimlane
  REGION: europe-west2

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Application
    steps:
      - name: Checkout the code
        uses: actions/checkout@master
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: quarkus-app-jvm
          path: build/quarkus-app

      - name: Upload Docker Files
        uses: actions/upload-artifact@v1
        with:
          name: dockerfiles
          path: src/main/docker

  #  Based on https://github.com/google-github-actions/example-workflows/blob/main/workflows/deploy-cloudrun/cloudrun-docker.yml
  docker-jvm:
    name: Create JVM Docker Image and Push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Download JVM Build
        uses: actions/download-artifact@v3
        with:
          name: quarkus-app-jvm
          path: build/quarkus-app

      - name: Download Docker Files
        uses: actions/download-artifact@v3
        with:
          name: dockerfiles
          path: dockerfiles

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" -f dockerfiles/Dockerfile.jvm ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

  deploy:
    name: Deploy Image to Cloud Run
    runs-on: ubuntu-latest
    needs: docker-jvm
    steps:
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}


#  dockerize-jvm:
#    runs-on: ubuntu-latest
#    name: Build JVM Docker Image
#    needs: build
#    steps:
#    - name: Download JVM Build
#      uses: actions/download-artifact@v3
#      with:
#        name: quarkus-app-jvm
#        path: build/quarkus-app
#
#    - name: Download Docker Files
#      uses: actions/download-artifact@v3
#      with:
#        name: dockerfiles
#        path: dockerfiles
#
#    - name: Listing
#      run: |
#        ls -ltR
#
#    - name: Dockerize
#      uses: maxday/quarkus-dockerize-action@master
#      with:
#        tag: gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APP_NAME }}
#        executablePath: 'dockerfiles/Dockerfile.jvm'
#        dockerfilePath: dockerfiles/Dockerfile.jvm

        

#    https://github.com/marketplace/actions/deploy-to-cloud-run